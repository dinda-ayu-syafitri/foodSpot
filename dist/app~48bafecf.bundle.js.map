{"version":3,"file":"app~48bafecf.bundle.js","mappings":";6ZACA,gnGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAqFA,QAjFe,CACPC,OAAM,WAAG,s/BA4Bf,EAEMC,YAAW,WAAG,qHACmC,OAA/CC,EAAMC,EAAAA,EAAAA,gCAAyC,SACjCC,EAAAA,EAAAA,YAA6BF,EAAIG,IAAG,OAAlDC,EAAQ,EAAH,KACLC,EAAkBC,SAASC,cAAc,iBACzCC,EAAkBF,SAASC,cAAc,qBAC/CF,EAAgBI,WAAYC,EAAAA,EAAAA,IAA0BN,GACtDI,EAAgBC,YAAaE,EAAAA,EAAAA,IAAqBP,GAElDQ,EAAAA,EAAAA,KAAwB,CACtBC,oBAAqBP,SAASC,cAAc,wBAC5CH,MAAO,CACLD,GAAIC,EAAMD,GACVW,KAAMV,EAAMU,KACZC,KAAMX,EAAMW,KACZC,OAAQZ,EAAMY,OACdC,UAAWb,EAAMa,UACjBC,YAAad,EAAMc,eAIjBC,EAAkBb,SAASC,cAAc,cACzCa,EAAad,SAASC,cAAc,eACpCc,EAAaf,SAASC,cAAc,eACpCe,EAAkBhB,SAASC,cAAc,oBAE/CY,EAAgBI,iBAAiB,QAAO,6BAAE,WAAOC,GAAC,yEAC7B,GAAnBA,EAAEC,iBACuB,KAArBL,EAAWM,OAAqC,KAArBL,EAAWK,MAAY,gBAEpDJ,EAAgBb,UAAY,gCAC5BW,EAAWM,MAAQ,GACnBL,EAAWK,MAAQ,GAAG,uBAMrB,OAJKC,EAAS,CACbxB,GAAIH,EAAIG,GACRW,KAAMM,EAAWM,MACjBC,OAAQN,EAAWK,OACpB,UAC0BxB,EAAAA,EAAAA,kBAAmCyB,GAAO,QAA/DC,EAAe,EAAH,KAClBR,EAAWM,MAAQ,GACnBL,EAAWK,MAAQ,GAEnBJ,EAAgBb,UAAY,wCAC5BoB,QAAQC,IAAIF,GACZpB,EAAgBC,WAAYE,EAAAA,EAAAA,IAAqBiB,GAAc,4CAElE,mDArBuC,IAqBrC,2CA9Ce,EA+CpB,8TClFF,gnGAAA/B,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAIA,IAAMkC,EAAO,IAAIC,EAAAA,EAajB,QAXkB,CACVlC,OAAM,WAAG,0HACNiC,EAAKE,eAAa,0CADZ,EAEf,EAEMlC,YAAW,WAAG,iGAClB,IAAImC,EAAAA,EAA2B,CAAEH,KAAAA,EAAMI,cAAeC,EAAAA,IACtD,IAAIC,EAAAA,EAA6B,CAAEN,KAAAA,EAAMI,cAAeC,EAAAA,IAAoB,0CAF1D,EAGpB","sources":["webpack://katalog_restoran/./src/scripts/views/pages/detail.js","webpack://katalog_restoran/./src/scripts/views/pages/favourite.js"],"sourcesContent":["import UrlParser from '../../routes/url-parser';\r\nimport DicodingRestoSrc from '../../data/dicoding_resto_src';\r\nimport { createRestoDetailTemplate, createReviewTemplate } from '../templates/template-creator';\r\nimport LikeButtonInitator from '../../utils/like-button-presenter.js';\r\n\r\nconst Detail = {\r\n  async render() {\r\n    return `\r\n          <article class=\"container\">\r\n          <h2>Detail Restoran</h2>\r\n          <div id=\"resto-detail\" class=\"resto-detail\"></div>\r\n          <div class=\"review-container\" id=\"review-container\">\r\n          <h4>Customer Review</h4>\r\n          </div>\r\n          <div id=\"resto-review\">\r\n          <h4>Add Review</h4>\r\n          <div id=\"addReviewStatus\"></div>\r\n<form action=\"\">\r\n  <div class=\"form-review-name\">\r\n    <label for=\"nameReview\">Nama</label>\r\n    <input type=\"text\" name=\"nameReview\" id=\"nameReview\" />\r\n  </div>\r\n\r\n  <div class=\"form-review-text\">\r\n    <label for=\"textReview\">Review</label>\r\n    <textarea name=\"textReview\" id=\"textReview\"></textarea>\r\n  </div>\r\n\r\n  <button type=\"submit\" id=\"submitBtn\">Submit</button>\r\n</form>\r\n          </div>\r\n          <div id=\"likeButtonContainer\"></div>\r\n        </article>\r\n        `;\r\n  },\r\n\r\n  async afterRender() {\r\n    const url = UrlParser.parseActiveUrlWithoutCombiner();\r\n    const resto = await DicodingRestoSrc.detailResto(url.id);\r\n    const DetailContainer = document.querySelector('#resto-detail');\r\n    const ReviewContainer = document.querySelector('#review-container');\r\n    DetailContainer.innerHTML = createRestoDetailTemplate(resto);\r\n    ReviewContainer.innerHTML += createReviewTemplate(resto);\r\n\r\n    LikeButtonInitator.init({\r\n      likeButtonContainer: document.querySelector('#likeButtonContainer'),\r\n      resto: {\r\n        id: resto.id,\r\n        name: resto.name,\r\n        city: resto.city,\r\n        rating: resto.rating,\r\n        pictureId: resto.pictureId,\r\n        description: resto.description,\r\n      },\r\n    });\r\n\r\n    const reviewSubmitBtn = document.querySelector('#submitBtn');\r\n    const reviewName = document.querySelector('#nameReview');\r\n    const reviewText = document.querySelector('#textReview');\r\n    const addReviewStatus = document.querySelector('#addReviewStatus');\r\n\r\n    reviewSubmitBtn.addEventListener('click', async (e) => {\r\n      e.preventDefault();\r\n      if (reviewName.value === '' || reviewText.value === '') {\r\n        // alert('Isi semua input!');\r\n        addReviewStatus.innerHTML = '<span>Isi semua input!</span>';\r\n        reviewName.value = '';\r\n        reviewText.value = '';\r\n      } else {\r\n        const review = {\r\n          id: url.id,\r\n          name: reviewName.value,\r\n          review: reviewText.value,\r\n        };\r\n        const reviewUpdate = await DicodingRestoSrc.addCustomerReview(review);\r\n        reviewName.value = '';\r\n        reviewText.value = '';\r\n        // alert('Review berhasil di post');\r\n        addReviewStatus.innerHTML = '<span>Review berhasil di post!</span>';\r\n        console.log(reviewUpdate);\r\n        ReviewContainer.innerHTML = createReviewTemplate(reviewUpdate);\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nexport default Detail;\r\n","import FavoriteRestoIdb from '../../data/favorite-resto-idb';\r\nimport FavoriteRestoSearchView from './liked-resto/favorite-resto-search-view';\r\nimport FavoriteRestoShowPresenter from './liked-resto/favorite-resto-show-presenter';\r\nimport FavoriteRestoSearchPresenter from './liked-resto/favorite-resto-search-presenter';\r\n\r\nconst view = new FavoriteRestoSearchView();\r\n\r\nconst favourite = {\r\n  async render() {\r\n    return view.getTemplate();\r\n  },\r\n\r\n  async afterRender() {\r\n    new FavoriteRestoShowPresenter({ view, favoriteResto: FavoriteRestoIdb });\r\n    new FavoriteRestoSearchPresenter({ view, favoriteResto: FavoriteRestoIdb });\r\n  },\r\n};\r\n\r\nexport default favourite;\r\n"],"names":["i","render","afterRender","url","UrlParser","DicodingRestoSrc","id","resto","DetailContainer","document","querySelector","ReviewContainer","innerHTML","createRestoDetailTemplate","createReviewTemplate","LikeButtonInitator","likeButtonContainer","name","city","rating","pictureId","description","reviewSubmitBtn","reviewName","reviewText","addReviewStatus","addEventListener","e","preventDefault","value","review","reviewUpdate","console","log","view","FavoriteRestoSearchView","getTemplate","FavoriteRestoShowPresenter","favoriteResto","FavoriteRestoIdb","FavoriteRestoSearchPresenter"],"sourceRoot":""}